//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeferpituBanking
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NeferpituBankingEntities : DbContext
    {
        public NeferpituBankingEntities()
            : base("name=NeferpituBankingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int CHECK__SignIn(string login, string password, ObjectParameter user_signed_Id)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CHECK__SignIn", loginParameter, passwordParameter, user_signed_Id);
        }
    
        public virtual int DO__Transaction(Nullable<decimal> value, Nullable<int> cardOwner_Id, Nullable<int> destinationCard_Id)
        {
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            var cardOwner_IdParameter = cardOwner_Id.HasValue ?
                new ObjectParameter("CardOwner_Id", cardOwner_Id) :
                new ObjectParameter("CardOwner_Id", typeof(int));
    
            var destinationCard_IdParameter = destinationCard_Id.HasValue ?
                new ObjectParameter("DestinationCard_Id", destinationCard_Id) :
                new ObjectParameter("DestinationCard_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DO__Transaction", valueParameter, cardOwner_IdParameter, destinationCard_IdParameter);
        }
    
        public virtual int FILL_Transaction(Nullable<decimal> value_Transaction, Nullable<int> cardOwner_Id, Nullable<int> destinationCard_Id)
        {
            var value_TransactionParameter = value_Transaction.HasValue ?
                new ObjectParameter("Value_Transaction", value_Transaction) :
                new ObjectParameter("Value_Transaction", typeof(decimal));
    
            var cardOwner_IdParameter = cardOwner_Id.HasValue ?
                new ObjectParameter("CardOwner_Id", cardOwner_Id) :
                new ObjectParameter("CardOwner_Id", typeof(int));
    
            var destinationCard_IdParameter = destinationCard_Id.HasValue ?
                new ObjectParameter("DestinationCard_Id", destinationCard_Id) :
                new ObjectParameter("DestinationCard_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FILL_Transaction", value_TransactionParameter, cardOwner_IdParameter, destinationCard_IdParameter);
        }
    
        public virtual ObjectResult<string> Get__AccountType(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get__AccountType", iDParameter);
        }
    
        public virtual ObjectResult<string> Get__AlertType(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get__AlertType", iDParameter);
        }
    
        public virtual ObjectResult<string> Get__CardState(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get__CardState", iDParameter);
        }
    
        public virtual ObjectResult<string> Get__CardType(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get__CardType", iDParameter);
        }
    
        public virtual ObjectResult<string> Get__TransactionState(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get__TransactionState", iDParameter);
        }
    
        public virtual ObjectResult<GET_AllUsersCards_Result> GET_AllUsersCards(Nullable<int> userId, string login, string password)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_AllUsersCards_Result>("GET_AllUsersCards", userIdParameter, loginParameter, passwordParameter);
        }
    
        public virtual int Get_InfoPermission(string login, string password, ObjectParameter output)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get_InfoPermission", loginParameter, passwordParameter, output);
        }
    
        public virtual ObjectResult<GET_PrivateCardInfo_Result> GET_PrivateCardInfo(Nullable<long> card_id, string login, string password)
        {
            var card_idParameter = card_id.HasValue ?
                new ObjectParameter("Card_id", card_id) :
                new ObjectParameter("Card_id", typeof(long));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PrivateCardInfo_Result>("GET_PrivateCardInfo", card_idParameter, loginParameter, passwordParameter);
        }
    }
}
