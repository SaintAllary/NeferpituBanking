//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeferpituBanking
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NeferpituBankingEntities : DbContext
    {
        public NeferpituBankingEntities()
            : base("name=NeferpituBankingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int CHECK__SignIn(string login, string password, ObjectParameter user_signed_Id)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CHECK__SignIn", loginParameter, passwordParameter, user_signed_Id);
        }
    
        public virtual int DO__Transaction(Nullable<decimal> value, Nullable<int> cardOwner_Id, Nullable<int> destinationCard_Id)
        {
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            var cardOwner_IdParameter = cardOwner_Id.HasValue ?
                new ObjectParameter("CardOwner_Id", cardOwner_Id) :
                new ObjectParameter("CardOwner_Id", typeof(int));
    
            var destinationCard_IdParameter = destinationCard_Id.HasValue ?
                new ObjectParameter("DestinationCard_Id", destinationCard_Id) :
                new ObjectParameter("DestinationCard_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DO__Transaction", valueParameter, cardOwner_IdParameter, destinationCard_IdParameter);
        }
    
        public virtual ObjectResult<string> Get__AccountType(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get__AccountType", iDParameter);
        }
    
        public virtual ObjectResult<string> Get__AlertType(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get__AlertType", iDParameter);
        }
    
        public virtual ObjectResult<string> Get__CardState(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get__CardState", iDParameter);
        }
    
        public virtual ObjectResult<string> Get__CardType(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get__CardType", iDParameter);
        }
    
        public virtual ObjectResult<string> Get__TransactionState(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get__TransactionState", iDParameter);
        }
    
        public virtual ObjectResult<GET_AccountInfo_Result> GET_AccountInfo(Nullable<int> idUser, string login, string password)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_AccountInfo_Result>("GET_AccountInfo", idUserParameter, loginParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GET_AllAlerts_Result> GET_AllAlerts(Nullable<int> accountId, string login, string password)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_AllAlerts_Result>("GET_AllAlerts", accountIdParameter, loginParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GET_AllTransactions_Result> GET_AllTransactions(Nullable<int> cardOwnerId, string login, string password)
        {
            var cardOwnerIdParameter = cardOwnerId.HasValue ?
                new ObjectParameter("CardOwnerId", cardOwnerId) :
                new ObjectParameter("CardOwnerId", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_AllTransactions_Result>("GET_AllTransactions", cardOwnerIdParameter, loginParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GET_AllUsersCards_Result> GET_AllUsersCards(Nullable<int> userId, string login, string password)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_AllUsersCards_Result>("GET_AllUsersCards", userIdParameter, loginParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GET_CardBalance_Result> GET_CardBalance(Nullable<int> cardBalanceId, string login, string password)
        {
            var cardBalanceIdParameter = cardBalanceId.HasValue ?
                new ObjectParameter("CardBalanceId", cardBalanceId) :
                new ObjectParameter("CardBalanceId", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_CardBalance_Result>("GET_CardBalance", cardBalanceIdParameter, loginParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GET_CardLimits_Result> GET_CardLimits(Nullable<int> cardLimitsId, string login, string password)
        {
            var cardLimitsIdParameter = cardLimitsId.HasValue ?
                new ObjectParameter("CardLimitsId", cardLimitsId) :
                new ObjectParameter("CardLimitsId", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_CardLimits_Result>("GET_CardLimits", cardLimitsIdParameter, loginParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GET_CardState_Result> GET_CardState(Nullable<int> cardStateId)
        {
            var cardStateIdParameter = cardStateId.HasValue ?
                new ObjectParameter("CardStateId", cardStateId) :
                new ObjectParameter("CardStateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_CardState_Result>("GET_CardState", cardStateIdParameter);
        }
    
        public virtual ObjectResult<GET_CardType_Result> GET_CardType(Nullable<int> cardTypeId)
        {
            var cardTypeIdParameter = cardTypeId.HasValue ?
                new ObjectParameter("CardTypeId", cardTypeId) :
                new ObjectParameter("CardTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_CardType_Result>("GET_CardType", cardTypeIdParameter);
        }
    
        public virtual int Get_InfoPermission(string login, string password, ObjectParameter output)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get_InfoPermission", loginParameter, passwordParameter, output);
        }
    
        public virtual ObjectResult<GET_LoginPassword_Result> GET_LoginPassword(string login, string password)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LoginPassword_Result>("GET_LoginPassword", loginParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GET_PaymentCompany_Result> GET_PaymentCompany(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PaymentCompany_Result>("GET_PaymentCompany", companyIdParameter);
        }
    
        public virtual ObjectResult<GET_PrivateCardInfo_Result> GET_PrivateCardInfo(Nullable<long> card_id, string login, string password)
        {
            var card_idParameter = card_id.HasValue ?
                new ObjectParameter("Card_id", card_id) :
                new ObjectParameter("Card_id", typeof(long));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PrivateCardInfo_Result>("GET_PrivateCardInfo", card_idParameter, loginParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GET_TransactionState_Result> GET_TransactionState(Nullable<int> transactionStateId)
        {
            var transactionStateIdParameter = transactionStateId.HasValue ?
                new ObjectParameter("transactionStateId", transactionStateId) :
                new ObjectParameter("transactionStateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_TransactionState_Result>("GET_TransactionState", transactionStateIdParameter);
        }
    
        public virtual int SET_Login(string newLogin, string login, string password, Nullable<int> idLog)
        {
            var newLoginParameter = newLogin != null ?
                new ObjectParameter("NewLogin", newLogin) :
                new ObjectParameter("NewLogin", typeof(string));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var idLogParameter = idLog.HasValue ?
                new ObjectParameter("IdLog", idLog) :
                new ObjectParameter("IdLog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SET_Login", newLoginParameter, loginParameter, passwordParameter, idLogParameter);
        }
    
        public virtual int SET_Password(string newPass, string login, string password, Nullable<int> idPass)
        {
            var newPassParameter = newPass != null ?
                new ObjectParameter("NewPass", newPass) :
                new ObjectParameter("NewPass", typeof(string));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var idPassParameter = idPass.HasValue ?
                new ObjectParameter("IdPass", idPass) :
                new ObjectParameter("IdPass", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SET_Password", newPassParameter, loginParameter, passwordParameter, idPassParameter);
        }
    }
}
